{"version":3,"sources":["suncalc.js","App.js","index.js"],"names":["PI","Math","sin","cos","tan","asin","atan","atan2","acos","rad","dayMs","J1970","J2000","fromJulian","j","Date","toDays","date","valueOf","toJulian","e","rightAscension","l","b","declination","azimuth","H","phi","dec","altitude","siderealTime","d","lw","solarMeanAnomaly","eclipticLongitude","M","sunCoords","L","ra","SunCalc","lat","lng","c","times","addTime","angle","riseName","setName","push","J0","approxTransit","Ht","n","solarTransitJ","ds","getSetJ","h","w","hourAngle","moonCoords","F","dt","dist","hoursLater","getTimes","height","i","len","time","Jset","Jrise","dh","sqrt","observerAngle","round","julianCycle","Jnoon","result","solarNoon","nadir","length","getMoonPosition","pa","astroRefraction","distance","parallacticAngle","getMoonIllumination","s","m","sdist","inc","fraction","phase","getMoonTimes","inUTC","t","setUTCHours","setHours","h1","h2","rise","set","a","xe","ye","roots","x1","x2","dx","hc","h0","abs","module","exports","DefaultLocation","DefaultDate","now","webSocket","WebSocket","App","useState","location","setLocation","setDate","zoom","setZoom","setAzimuth","setAltitude","handleChangeLocation","className","Container","alt","src","Form","Group","controlId","Row","Label","Col","initialValue","value","dateFormat","timeFormat","onChange","moment","Button","onClick","variant","Control","type","target","defaultLocation","mapTypeId","style","onChangeLocation","onChangeZoom","newZoom","apiKey","pos","getPosition","calculateSunPos","send","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7fdd4197.chunk.js","sourcesContent":["/*\n (c) 2011-2015, Vladimir Agafonkin\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\n https://github.com/mourner/suncalc\n*/\n\n(function () { 'use strict';\n\n// shortcuts for easier to read formulas\n\nvar PI   = Math.PI,\n    sin  = Math.sin,\n    cos  = Math.cos,\n    tan  = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    acos = Math.acos,\n    rad  = PI / 180;\n\n// sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n\n\n// date/time constants and conversions\n\nvar dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n\nfunction toJulian(date) { return date.valueOf() / dayMs - 0.5 + J1970; }\nfunction fromJulian(j)  { return new Date((j + 0.5 - J1970) * dayMs); }\nfunction toDays(date)   { return toJulian(date) - J2000; }\n\n\n// general calculations for position\n\nvar e = rad * 23.4397; // obliquity of the Earth\n\nfunction rightAscension(l, b) { return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l)); }\nfunction declination(l, b)    { return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l)); }\n\nfunction azimuth(H, phi, dec)  { return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi)); }\nfunction altitude(H, phi, dec) { return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H)); }\n\nfunction siderealTime(d, lw) { return rad * (280.16 + 360.9856235 * d) - lw; }\n\nfunction astroRefraction(h) {\n    if (h < 0) // the following formula works for positive altitudes only.\n        h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to rad:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n}\n\n// general sun calculations\n\nfunction solarMeanAnomaly(d) { return rad * (357.5291 + 0.98560028 * d); }\n\nfunction eclipticLongitude(M) {\n\n    var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)), // equation of center\n        P = rad * 102.9372; // perihelion of the Earth\n\n    return M + C + P + PI;\n}\n\nfunction sunCoords(d) {\n\n    var M = solarMeanAnomaly(d),\n        L = eclipticLongitude(M);\n\n    return {\n        dec: declination(L, 0),\n        ra: rightAscension(L, 0)\n    };\n}\n\n\nvar SunCalc = {};\n\n\n// calculates sun position for a given date and latitude/longitude\n\nSunCalc.getPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c  = sunCoords(d),\n        H  = siderealTime(d, lw) - c.ra;\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: altitude(H, phi, c.dec)\n    };\n};\n\n\n// sun times configuration (angle, morning name, evening name)\n\nvar times = SunCalc.times = [\n    [-0.833, 'sunrise',       'sunset'      ],\n    [  -0.3, 'sunriseEnd',    'sunsetStart' ],\n    [    -6, 'dawn',          'dusk'        ],\n    [   -12, 'nauticalDawn',  'nauticalDusk'],\n    [   -18, 'nightEnd',      'night'       ],\n    [     6, 'goldenHourEnd', 'goldenHour'  ]\n];\n\n// adds a custom time to the times config\n\nSunCalc.addTime = function (angle, riseName, setName) {\n    times.push([angle, riseName, setName]);\n};\n\n\n// calculations for sun times\n\nvar J0 = 0.0009;\n\nfunction julianCycle(d, lw) { return Math.round(d - J0 - lw / (2 * PI)); }\n\nfunction approxTransit(Ht, lw, n) { return J0 + (Ht + lw) / (2 * PI) + n; }\nfunction solarTransitJ(ds, M, L)  { return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L); }\n\nfunction hourAngle(h, phi, d) { return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d))); }\nfunction observerAngle(height) { return -2.076 * Math.sqrt(height) / 60; }\n\n// returns set time for the given sun altitude\nfunction getSetJ(h, lw, phi, dec, n, M, L) {\n\n    var w = hourAngle(h, phi, dec),\n        a = approxTransit(w, lw, n);\n    return solarTransitJ(a, M, L);\n}\n\n\n// calculates sun times for a given date, latitude/longitude, and, optionally,\n// the observer height (in meters) relative to the horizon\n\nSunCalc.getTimes = function (date, lat, lng, height) {\n\n    height = height || 0;\n\n    var lw = rad * -lng,\n        phi = rad * lat,\n\n        dh = observerAngle(height),\n\n        d = toDays(date),\n        n = julianCycle(d, lw),\n        ds = approxTransit(0, lw, n),\n\n        M = solarMeanAnomaly(ds),\n        L = eclipticLongitude(M),\n        dec = declination(L, 0),\n\n        Jnoon = solarTransitJ(ds, M, L),\n\n        i, len, time, h0, Jset, Jrise;\n\n\n    var result = {\n        solarNoon: fromJulian(Jnoon),\n        nadir: fromJulian(Jnoon - 0.5)\n    };\n\n    for (i = 0, len = times.length; i < len; i += 1) {\n        time = times[i];\n        h0 = (time[0] + dh) * rad;\n\n        Jset = getSetJ(h0, lw, phi, dec, n, M, L);\n        Jrise = Jnoon - (Jset - Jnoon);\n\n        result[time[1]] = fromJulian(Jrise);\n        result[time[2]] = fromJulian(Jset);\n    }\n\n    return result;\n};\n\n\n// moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n\nfunction moonCoords(d) { // geocentric ecliptic coordinates of the moon\n\n    var L = rad * (218.316 + 13.176396 * d), // ecliptic longitude\n        M = rad * (134.963 + 13.064993 * d), // mean anomaly\n        F = rad * (93.272 + 13.229350 * d),  // mean distance\n\n        l  = L + rad * 6.289 * sin(M), // longitude\n        b  = rad * 5.128 * sin(F),     // latitude\n        dt = 385001 - 20905 * cos(M);  // distance to the moon in km\n\n    return {\n        ra: rightAscension(l, b),\n        dec: declination(l, b),\n        dist: dt\n    };\n}\n\nSunCalc.getMoonPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c = moonCoords(d),\n        H = siderealTime(d, lw) - c.ra,\n        h = altitude(H, phi, c.dec),\n        // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n        pa = atan(sin(H), tan(phi) * cos(c.dec) - sin(c.dec) * cos(H));\n\n    h = h + astroRefraction(h); // altitude correction for refraction\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: h,\n        distance: c.dist,\n        parallacticAngle: pa\n    };\n};\n\n\n// calculations for illumination parameters of the moon,\n// based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n// Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n\nSunCalc.getMoonIllumination = function (date) {\n\n    var d = toDays(date || new Date()),\n        s = sunCoords(d),\n        m = moonCoords(d),\n\n        sdist = 149598000, // distance from Earth to Sun in km\n\n        phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\n        inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\n        angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) -\n                cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\n\n    return {\n        fraction: (1 + cos(inc)) / 2,\n        phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\n        angle: angle\n    };\n};\n\n\nfunction hoursLater(date, h) {\n    return new Date(date.valueOf() + h * dayMs / 24);\n}\n\n// calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n\nSunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = 0.133 * rad,\n        h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n        h1, h2, rise, set, a, b, xe, ye, d, roots, x1, x2, dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n        h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\n        h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n        a = (h0 + h2) / 2 - h1;\n        b = (h2 - h0) / 2;\n        xe = -b / (2 * a);\n        ye = (a * xe + b) * xe + h1;\n        d = b * b - 4 * a * h1;\n        roots = 0;\n\n        if (d >= 0) {\n            dx = Math.sqrt(d) / (Math.abs(a) * 2);\n            x1 = xe - dx;\n            x2 = xe + dx;\n            if (Math.abs(x1) <= 1) roots++;\n            if (Math.abs(x2) <= 1) roots++;\n            if (x1 < -1) x1 = x2;\n        }\n\n        if (roots === 1) {\n            if (h0 < 0) rise = i + x1;\n            else set = i + x1;\n\n        } else if (roots === 2) {\n            rise = i + (ye < 0 ? x2 : x1);\n            set = i + (ye < 0 ? x1 : x2);\n        }\n\n        if (rise && set) break;\n\n        h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = hoursLater(t, rise);\n    if (set) result.set = hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n};\n\n\n// export as Node module / AMD module / browser variable\nif (typeof exports === 'object' && typeof module !== 'undefined') module.exports = SunCalc;\nelse if (typeof define === 'function' && define.amd) define(SunCalc);\nelse window.SunCalc = SunCalc;\n\n}());\n","import \"./bootstrap.css\";\nimport SunCalc from \"./suncalc.js\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport React, { useState } from \"react\";\nimport MapPicker from \"react-google-map-picker\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\n\nimport \"react-datetime/css/react-datetime.css\";\n\nconst DefaultLocation = { lat: 53.891, lng: 11.447 };\nconst DefaultZoom = 10;\nconst DefaultDate = Date.now();\nconst DefaultAzimuth = 0;\nconst DefaultAltitude = 0;\nvar webSocket = new WebSocket(\"ws://10.10.82.188:9080\");\n\nexport default function App() {\n  const [location, setLocation] = useState(DefaultLocation);\n  const [date, setDate] = useState(DefaultDate);\n  const [zoom, setZoom] = useState(DefaultZoom);\n  const [azimuth, setAzimuth] = useState(DefaultAzimuth);\n  const [altitude, setAltitude] = useState(DefaultAltitude);\n\n  function handleChangeLocation(lat, lng) {\n    setLocation({ lat: lat, lng: lng });\n  }\n  function handleChangeZoom(newZoom) {\n    setZoom(newZoom);\n  }\n  function handleChangeAzimuth(a) {\n    setAzimuth(a);\n  }\n  function handleChangeAltitude(a) {\n    setAltitude(a);\n  }\n  function resetDate() {\n    setDate(Date.now());\n  }\n  function calculateSunPos(date, lat, lng) {\n    var pos = SunCalc.getPosition(date, lat, lng);\n    setAzimuth((pos.azimuth * 180) / Math.PI + 180);\n    setAltitude(pos.altitude * (180 / Math.PI));\n  }\n  function send() {\n    webSocket.send(\"Az\" + azimuth);\n    webSocket.send(\"Al\" + altitude);\n  }\n  return (\n    <div className=\"App\">\n      <Container className=\"mt-3\">\n        <h1 className=\"display-3\">\n          Sonnenposition{\" \"}\n          <img alt=\"\" src=\"https://img.icons8.com/dusk/64/000000/sun--v2.png\" />\n        </h1>\n\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formLatLng\">\n            <Row>\n              <Form.Label>Datum / Zeit</Form.Label>\n              <Col className=\"mb-3\">\n                <Datetime\n                  initialValue={DefaultDate}\n                  value={date}\n                  dateFormat=\"DD.MM.YYYY\"\n                  timeFormat=\"HH:mm\"\n                  onChange={(e) => {\n                    setDate(moment(e));\n                  }}\n                />\n              </Col>\n              <Col>\n                <Button onClick={resetDate} variant=\"secondary\">\n                  Zurücksetzen\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"mb-3\">\n                <Form.Label>Breitengrad</Form.Label>\n                <Form.Control\n                  value={location.lat}\n                  type=\"number\"\n                  onChange={(e) =>\n                    handleChangeLocation(e.target.value, location.lng)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Längengrad</Form.Label>\n                <Form.Control\n                  value={location.lng}\n                  type=\"number\"\n                  onChange={(e) =>\n                    handleChangeLocation(location.lat, e.target.value)\n                  }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <MapPicker\n            className=\"mb-3\"\n            defaultLocation={DefaultLocation}\n            zoom={zoom}\n            mapTypeId=\"satellite\"\n            style={{ height: \"300px\" }}\n            onChangeLocation={handleChangeLocation}\n            onChangeZoom={handleChangeZoom}\n            apiKey=\"AIzaSyBY-HbulcgLoFyCTZqUTIwBRrtmyEWSkp4\"\n          />\n          <Button\n            className=\"mb-3\"\n            variant=\"primary\"\n            onClick={(e) => calculateSunPos(date, location.lat, location.lng)}\n          >\n            Berechnen\n          </Button>\n          <hr />\n          <Form.Group>\n            <Row>\n              <Col className=\"mb-3\">\n                <Form.Label>Sonnenwinkel Azimuth</Form.Label>\n                <Form.Control\n                  value={azimuth}\n                  type=\"number\"\n                  onChange={(e) => handleChangeAzimuth(e.target.value)}\n                />\n              </Col>\n              <Col>\n                <Form.Label>Sonnenhöhe</Form.Label>\n                <Form.Control\n                  value={altitude}\n                  type=\"number\"\n                  onChange={(e) => handleChangeAltitude(e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Button className=\"mb-3\" variant=\"primary\" onClick={(e) => send()}>\n              Verfahren\n            </Button>\n          </Form.Group>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}